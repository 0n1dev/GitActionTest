# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: KooGG CD

on:
  push:
    branches: main

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: JDK 11 설정
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Gradle 빌드
      run: gradle build
    # Revision을 기반으로 Image Tag 생성
    - name: Generate Image Tag
      id: image
      run: |
        TAG=$(echo ${{ github.sha }} | cut -c1-8)
        echo TAG=$TAG
        echo "::set-output name=tag::$TAG"
    - name: Docker Buildx 설정
      uses: docker/setup-buildx-action@v1
    - name: KooGG Docker Registry 로그인
      uses: docker/login-action@v1
      with:
        registry: registry.koo.gg
        username: ${{ secrets.user }}
        password: ${{ secrets.pass }}
    - name: 이미지 build & push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          registry.koo.gg/kooggbot:${{ steps.image.outputs.tag }}
